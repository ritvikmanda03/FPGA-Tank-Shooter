//-------------------------------------------------------------------------
//    Ball.sv                                                            --
//    Viral Mehta                                                        --
//    Spring 2005                                                        --
//                                                                       --
//    Modified by Stephen Kempf 03-01-2006                               --
//                              03-12-2007                               --
//    Translated by Joe Meng    07-07-2013                               --
//    Fall 2014 Distribution                                             --
//                                                                       --
//    For use with ECE 298 Lab 7                                         --
//    UIUC ECE Department                                                --
//-------------------------------------------------------------------------


module  tank2 ( input Reset, frame_clk,
					input [7:0] keycode,
               output [9:0]  Tank2X, Tank2Y, Tank2S);
    
    logic [9:0] Tank_X_Pos, Tank_Y_Pos, Tank_X_Motion, Tank_Y_Motion, Tank_Size;
	 
    parameter [9:0] Tank_X_Center=550;  // Center position on the X axis
    parameter [9:0] Tank_Y_Center=400;  // Center position on the Y axis
    parameter [9:0] Tank_X_Min=0;       // Leftmost point on the X axis
    parameter [9:0] Tank_X_Max=639;     // Rightmost point on the X axis
    parameter [9:0] Tank_Y_Min=0;       // Topmost point on the Y axis
    parameter [9:0] Tank_Y_Max=479;     // Bottommost point on the Y axis
    parameter [9:0] Tank_X_Step=1;      // Step size on the X axis
    parameter [9:0] Tank_Y_Step=1;      // Step size on the Y axis

    assign Tank_Size = 32;  // assigns the value 4 as a 10-digit binary number, ie "0000000100"
   
    always_ff @ (posedge Reset or posedge frame_clk )
    begin: Move_Ball
        if (Reset)  // Asynchronous Reset
        begin 
            Tank_Y_Motion <= 10'd0; //Tank_Y_Step;
				Tank_X_Motion <= 10'd0; //Tank_X_Step;
				Tank_Y_Pos <= Tank_Y_Center;
				Tank_X_Pos <= Tank_X_Center;
        end
           
        else 
        begin 
				 if ( (Tank_Y_Pos + Tank_Size) >= Tank_Y_Max )  // Ball is at the bottom edge, BOUNCE!
					  Tank_Y_Motion <= (~ (Tank_Y_Step) + 1'b1);  // 2's complement.
					  
				 else if ( (Tank_Y_Pos - Tank_Size) <= Tank_Y_Min )  // Ball is at the top edge, BOUNCE!
					  Tank_Y_Motion <= Tank_Y_Step;
					  
				  else if ( (Tank_X_Pos + Tank_Size) >= Tank_X_Max )  // Ball is at the Right edge, BOUNCE!
					  Tank_X_Motion <= (~ (Tank_X_Step) + 1'b1);  // 2's complement.
					  
				 else if ( (Tank_X_Pos - Tank_Size) <= Tank_X_Min )  // Ball is at the Left edge, BOUNCE!
					  Tank_X_Motion <= Tank_X_Step;
					  ////
				else if ( ((Tank_Y_Pos + Tank_Size) >= Tank_Y_Max) && (keycode >= 8'h16)   )  // Ball is at the bottom edge, BOUNCE!
					  Tank_Y_Motion <= (~ (Tank_Y_Step) + 1'b1);  // 2's complement.
					  
				 else if ( ((Tank_Y_Pos - Tank_Size) <= Tank_Y_Min) && (keycode >= 8'h1A) )  // Ball is at the top edge, BOUNCE!
					  Tank_Y_Motion <= Tank_Y_Step;
					  
				  else if ( ((Tank_X_Pos + Tank_Size) >= Tank_X_Max) && (keycode >= 8'h07))  // Ball is at the Right edge, BOUNCE!
					  Tank_X_Motion <= (~ (Tank_X_Step) + 1'b1);  // 2's complement.
					  
				 else if ( ((Tank_X_Pos - Tank_Size) <= Tank_X_Min) && (keycode >= 8'h04) )  // Ball is at the Left edge, BOUNCE!
					  Tank_X_Motion <= Tank_X_Step;
					  ////
					  
				 else 
					  Tank_Y_Motion <= 10'd0; 
					  Tank_X_Motion <= 10'd0;  
					  
				 
				 case (keycode)
					8'h50 : begin

								Tank_X_Motion <= -1;//A
								Tank_Y_Motion<= 0;
							  end
					        
					8'h4F : begin
								
					        Tank_X_Motion <= 1;//D
							  Tank_Y_Motion <= 0;
							  end

							  
					8'h51 : begin

					        Tank_Y_Motion <= 1;//S
							  Tank_X_Motion <= 0;
							  //xaxis <= 0;
							 end
							  
					8'h52 : begin
					        Tank_Y_Motion <= -1;//W
							  Tank_X_Motion <= 0;
							  //xaxis <= 0;
							 end	  
					default: ;
			   endcase
				 
				 Tank_Y_Pos <= (Tank_Y_Pos + Tank_Y_Motion);  // Update ball position
				 Tank_X_Pos <= (Tank_X_Pos + Tank_X_Motion);
			
			
	  /**************************************************************************************
	    ATTENTION! Please answer the following quesiton in your lab report! Points will be allocated for the answers!
		 Hidden Question #2/2:
          Note that Tank_Y_Motion in the above statement may have been changed at the same clock edge
          that is causing the assignment of Tank_Y_Pos.  Will the new value of Tank_Y_Motion be used,
          or the old?  How will this impact behavior of the ball during a bounce, and how might that 
          interact with a response to a keypress?  Can you fix it?  Give an answer in your Post-Lab.
      **************************************************************************************/
//				if ((Tank_X_Motion != 0)||(Tank_Y_Motion != 0))begin
//					Tank_X_Motion <= 0;
//					Tank_Y_Motion <= 0;
//				end else begin
//				end
			
		end  
    end
       
    assign Tank2X = Tank_X_Pos;
   
    assign Tank2Y = Tank_Y_Pos;
   
    assign Tank2S = Tank_Size;
    

endmodule
